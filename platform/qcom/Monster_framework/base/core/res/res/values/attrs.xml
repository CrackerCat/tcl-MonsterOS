<resources>

    <attr name="attr_for_error" format="boolean" />
    <!-- The color applied to framework switch thumbs in their normal state. -->
    <attr name="colorSwitchThumbNormal" format="color" />
    <attr name="alertDialogCenterButtons" format="boolean" />
    <attr name="dialogTitleIconsDecorLayout" format="reference" />
    <!-- Window decor layout to use in dialog mode with custom titles. -->
    <attr name="dialogCustomTitleDecorLayout" format="reference" />
    <!-- Window decor layout to use in dialog mode with title only. -->
    <attr name="dialogTitleDecorLayout" format="reference" />
    <attr name="headerLayout" format="reference" />
    <attr name="layout" format="reference" />
	<attr name="colorToolbarIcon" format="color"/>
    <declare-styleable name="MstTabWidget">
        <attr name="tabLayout" format="reference" />
    </declare-styleable>
    <declare-styleable name="MstSpinner">
        <attr name="popupPromptView" format="reference" />
        <attr name="disableChildrenWhenDisabled" format="boolean" />
    </declare-styleable>
    <declare-styleable name="MstPopupWindow">

        <!-- Transition used to move views into the popup window. -->
        <attr name="popupEnterTransition" format="reference" />
        <!-- Transition used to move views out of the popup window. -->
        <attr name="popupExitTransition" format="reference" />
    </declare-styleable>
    <declare-styleable name="PreferenceActivity">
        <attr name="android:layout" />

        <!-- The layout for the Preference Header. This should rarely need to be changed. -->
        <attr name="headerLayout" />
        <!--
             true if the Icon view will be removed when there is none and thus not showing
             the fixed margins.
        -->
        <attr name="headerRemoveIconIfEmpty" format="boolean" />
    </declare-styleable>
    <declare-styleable name="ButtonBarLayout">

        <!--
             Whether to automatically stack the buttons when there is not
             enough space to lay them out side-by-side.
        -->
        <attr name="allowStacking" format="boolean" />
    </declare-styleable>
    <declare-styleable name="AlertDialog">
        <attr name="fullDark" format="reference|color" />
        <attr name="topDark" format="reference|color" />
        <attr name="centerDark" format="reference|color" />
        <attr name="bottomDark" format="reference|color" />
        <attr name="fullBright" format="reference|color" />
        <attr name="topBright" format="reference|color" />
        <attr name="centerBright" format="reference|color" />
        <attr name="bottomBright" format="reference|color" />
        <attr name="bottomMedium" format="reference|color" />
        <attr name="centerMedium" format="reference|color" />
        <attr name="layout" />
        <attr name="buttonPanelSideLayout" format="reference" />
        <attr name="listLayout" format="reference" />
        <attr name="multiChoiceItemLayout" format="reference" />
        <attr name="singleChoiceItemLayout" format="reference" />
        <attr name="listItemLayout" format="reference" />
        <attr name="progressLayout" format="reference" />
        <attr name="horizontalProgressLayout" format="reference" />
        <!-- @hide Whether fullDark, etc. should use default values if null. -->
        <attr name="needsDefaultBackgrounds" format="boolean" />
        <attr name="noTitleBar" format="boolean" />
        <attr name="noNavigationBar" format="boolean" />
        <attr name="hasScrollIndicators" format="boolean"/>
    </declare-styleable>
    <declare-styleable name="PreferenceFrameLayout_Layout">

        <!-- Padding to use at the top of the prefs content. -->
        <attr name="layout_removeBorders" format="boolean" />
    </declare-styleable>

    <eat-comment />

    <!-- Default style for PreferenceScreen. -->
    <attr name="preferenceScreenStyle" format="reference" />
    <!-- Default style for the PreferenceActivity. -->
    <attr name="preferenceActivityStyle" format="reference" />
    <!-- Default style for Headers pane in PreferenceActivity. -->
    <attr name="preferenceFragmentStyle" format="reference" />
    <!-- Default style for PreferenceCategory. -->
    <attr name="preferenceCategoryStyle" format="reference" />
    <!-- Default style for Preference. -->
    <attr name="preferenceStyle" format="reference" />
    <!-- Default style for informational Preference. -->
    <attr name="preferenceInformationStyle" format="reference" />
    <!-- Default style for CheckBoxPreference. -->
    <attr name="checkBoxPreferenceStyle" format="reference" />
    <!-- Default style for YesNoPreference. -->
    <attr name="yesNoPreferenceStyle" format="reference" />
    <!-- Default style for DialogPreference. -->
    <attr name="dialogPreferenceStyle" format="reference" />
    <!-- Default style for EditTextPreference. -->
    <attr name="editTextPreferenceStyle" format="reference" />
    <!-- @hide Default style for SeekBarDialogPreference. -->
    <attr name="seekBarDialogPreferenceStyle" format="reference" />
    <!-- Default style for RingtonePreference. -->
    <attr name="ringtonePreferenceStyle" format="reference" />
    <!-- The preference layout that has the child/tabbed effect. -->
    <attr name="preferenceLayoutChild" format="reference" />
    <!-- Preference panel style -->
    <attr name="preferencePanelStyle" format="reference" />
    <!-- Preference headers panel style -->
    <attr name="preferenceHeaderPanelStyle" format="reference" />
    <!-- Preference list style -->
    <attr name="preferenceListStyle" format="reference" />
    <!-- Preference fragment list style -->
    <attr name="preferenceFragmentListStyle" format="reference" />
    <!-- Preference fragment padding side -->
    <attr name="preferenceFragmentPaddingSide" format="dimension" />
    <!-- Default style for switch preferences. -->
    <attr name="switchPreferenceStyle" format="reference" />
    <!-- Default style for seekbar preferences. -->
    <attr name="seekBarPreferenceStyle" format="reference" />

    <!-- Preference frame layout styles. -->
    <attr name="preferenceFrameLayoutStyle" format="reference" />
    
    <attr name="dropdownPreferenceStyle" format="reference" />

    <declare-styleable name="PreferenceFrameLayout">

        <!-- Padding to use at the top of the prefs content. -->
        <attr name="borderTop" format="dimension" />
        <!-- Padding to use at the bottom of the prefs content. -->
        <attr name="borderBottom" format="dimension" />
        <!-- Padding to use at the left of the prefs content. -->
        <attr name="borderLeft" format="dimension" />
        <!-- Padding to use at the right of the prefs content. -->
        <attr name="borderRight" format="dimension" />
    </declare-styleable>

    <!-- Bright text color for use over activated backgrounds. -->
    <attr name="textColorPrimaryActivated" format="reference|color" />
    <!-- Dim text color for use over activated backgrounds. -->
    <attr name="textColorSecondaryActivated" format="reference|color" />
    <attr name="panelMenuListWidth" format="dimension" />
    <attr name="floatActionButtonStyle" format="reference" />

    <declare-styleable name="FloatingActionButton">
        <attr name="size" format="dimension">
            <enum name="large" value="0" />
            <enum name="normal" value="1" />
            <enum name="small" value="2" />
        </attr>
        <attr name="centerImage" format="reference|color" />
    </declare-styleable>

    <attr name="CardViewStyle" format="reference" />

    <declare-styleable name="CardView">

        <!-- Background color for CardView. -->
        <attr name="cardBackgroundColor" format="color" />
        <!-- Corner radius for CardView. -->
        <attr name="cardCornerRadius" format="dimension" />
        <!-- Elevation for CardView. -->
        <attr name="cardElevation" format="dimension" />
        <!-- Maximum Elevation for CardView. -->
        <attr name="cardMaxElevation" format="dimension" />
        <!-- Add padding in API v21+ as well to have the same measurements with previous versions. -->
        <attr name="cardUseCompatPadding" format="boolean" />
        <!-- Add padding to CardView on v20 and before to prevent intersections between the Card content and rounded corners. -->
        <attr name="cardPreventCornerOverlap" format="boolean" />
        <!-- Inner padding between the edges of the Card and children of the CardView. -->
        <attr name="contentPadding" format="dimension" />
        <!-- Inner padding between the left edge of the Card and children of the CardView. -->
        <attr name="contentPaddingLeft" format="dimension" />
        <!-- Inner padding between the right edge of the Card and children of the CardView. -->
        <attr name="contentPaddingRight" format="dimension" />
        <!-- Inner padding between the top edge of the Card and children of the CardView. -->
        <attr name="contentPaddingTop" format="dimension" />
        <!-- Inner padding between the bottom edge of the Card and children of the CardView. -->
        <attr name="contentPaddingBottom" format="dimension" />
    </declare-styleable>
    <declare-styleable name="Toolbar">
        <attr name="titleTextAppearance" format="reference" />
        <attr name="subtitleTextAppearance" format="reference" />
        <attr name="title" format="string" />
        <attr name="subtitle" format="string" />
        <attr name="android:gravity" />
        <attr name="titleMargins" format="dimension" />
        <attr name="titleMarginStart" format="dimension" />
        <attr name="titleMarginEnd" format="dimension" />
        <attr name="titleMarginTop" format="dimension" />
        <attr name="titleMarginBottom" format="dimension" />
        <attr name="contentInsetStart" format="dimension" />
        <attr name="contentInsetEnd" format="dimension" />
        <attr name="contentInsetLeft" format="dimension" />
        <attr name="contentInsetRight" format="dimension" />
        <attr name="maxButtonHeight" format="dimension" />
        <attr name="navigationButtonStyle" format="reference" />
        <attr name="showBottomDivider" format="boolean" />
        <attr name="bottomDividerColor" format="color" />
        <attr name="android:background" />
        <attr name="buttonGravity">

            <!-- Push object to the top of its container, not changing its size. -->
            <flag name="top" value="0x30" />
            <!-- Push object to the bottom of its container, not changing its size. -->
            <flag name="bottom" value="0x50" />
        </attr>
        <!-- Icon drawable to use for the collapse button. -->
        <attr name="collapseIcon" format="reference" />
        <!-- Text to set as the content description for the collapse button. -->
        <attr name="collapseContentDescription" format="string" />
        <!--
             Reference to a theme that should be used to inflate popups
             shown by widgets in the toolbar.
        -->
        <attr name="popupTheme" format="reference" />
        <!--
             Icon drawable to use for the navigation button located at
             the start of the toolbar.
        -->
        <attr name="navigationIcon" format="reference" />
        <!--
             Text to set as the content description for the navigation button
             located at the start of the toolbar.
        -->
        <attr name="navigationContentDescription" format="string" />
        <!--
             Drawable to set as the logo that appears at the starting side of
             the Toolbar, just after the navigation button.
        -->
        <attr name="android:logo" />
        <!--
             A content description string to describe the appearance of the
             associated logo image.
        -->
        <attr name="logoDescription" format="string" />
        <!-- A color to apply to the title string. -->
        <attr name="titleTextColor" format="color" />
        <!-- A color to apply to the subtitle string. -->
        <attr name="subtitleTextColor" format="color" />
    </declare-styleable>
    <declare-styleable name="MenuView">

        <!-- Default appearance of menu item text. -->
        <attr name="itemTextAppearance" format="reference" />
        <!-- Default horizontal divider between rows of menu items. -->
        <attr name="horizontalDivider" format="reference" />
        <!-- Default vertical divider between menu items. -->
        <attr name="verticalDivider" format="reference" />
        <!-- Default background for the menu header. -->
        <attr name="headerBackground" format="color|reference" />
        <!-- Default background for each menu item. -->
        <attr name="itemBackground" format="color|reference" />
        <!-- Default animations for the menu. -->
        <attr name="android:windowAnimationStyle" />
        <!-- Default disabled icon alpha for each menu item that shows an icon. -->
        <attr name="itemIconDisabledAlpha" format="float" />
        <!-- Whether space should be reserved in layout when an icon is missing. -->
        <attr name="preserveIconSpacing" format="boolean" />
    </declare-styleable>
    <declare-styleable name="IconMenuView">

        <!-- Defines the height of each row. -->
        <attr name="rowHeight" format="dimension" />
        <!-- Defines the maximum number of rows displayed. -->
        <attr name="maxRows" format="integer" />
        <!-- Defines the maximum number of items per row. -->
        <attr name="maxItemsPerRow" format="integer" />
        <!-- Defines the maximum number of items to show. -->
        <attr name="maxItems" format="integer" />
        <!-- 'More' icon. -->
        <attr name="moreIcon" format="reference" />
    </declare-styleable>
    <declare-styleable name="ActionMenuItemView">
        <attr name="android:minWidth" />
    </declare-styleable>

    <attr name="popupMenuItemHeight" format="dimension" />
    <attr name="menuViewStyle" format="reference" />

    <declare-styleable name="TabLayout">
        <attr name="tabIndicatorColor" format="color" />
        <attr name="tabIndicatorHeight" format="dimension" />
        <attr name="tabContentStart" format="dimension" />
        <attr name="tabBackground" format="reference" />
        <attr name="tabMode">
            <enum name="scrollable" value="0" />
            <enum name="fixed" value="1" />
        </attr>

        <!--
             Standard gravity constant that a child supplies to its parent.
             Defines how the child view should be positioned, on both the X and Y axes,
             within its enclosing layout.
        -->
        <attr name="tabGravity">
            <enum name="fill" value="0" />
            <enum name="center" value="1" />
        </attr>
        <attr name="tabMinWidth" format="dimension" />
        <attr name="tabMaxWidth" format="dimension" />
        <attr name="tabTextAppearance" format="reference" />
        <attr name="tabTextColor" format="color" />
        <attr name="tabSelectedTextColor" format="color" />
        <attr name="tabPaddingStart" format="dimension" />
        <attr name="tabPaddingTop" format="dimension" />
        <attr name="tabPaddingEnd" format="dimension" />
        <attr name="tabPaddingBottom" format="dimension" />
        <attr name="tabPadding" format="dimension" />
    </declare-styleable>
    <declare-styleable name="TabTextAppearance">
        <attr name="android:textSize" />
        <attr name="android:textColor" />
    </declare-styleable>
    <declare-styleable name="ScrimInsetsFrameLayout">
        <attr name="insetForeground" format="color|reference" />
    </declare-styleable>
    <declare-styleable name="RecyclerView">

        <!--
        Class name of the Layout Manager to be used.
        <p/>
        The class must extend mst.widget.recycleview.RecyclerView$LayoutManager
        and have either a default constructor or constructor with the signature
        (android.content.Context, android.util.AttributeSet, int, int).
         <p/>
         If the name starts with a '.', application package is prefixed.
         Else, if the name contains a '.', the classname is assumed to be a full class name.
         Else, the recycler view package name (mst.widget.recycleview) is prefixed.
        -->
        <attr name="layoutManager" format="string" />

        <!-- ============================= -->
        <!-- Attributes for Layout Manager -->
        <!-- ============================= -->
        <eat-comment />

        <attr name="android:orientation" />
        <attr name="spanCount" format="integer" />
        <attr name="reverseLayout" format="boolean" />
        <attr name="stackFromEnd" format="boolean" />
    </declare-styleable>
    <declare-styleable name="LinearLayoutCompat">

        <!--
             Should the layout be a column or a row?  Use "horizontal"
             for a row, "vertical" for a column.  The default is
             horizontal.
        -->
        <attr name="android:orientation" />
        <attr name="android:gravity" />
        <!--
             When set to false, prevents the layout from aligning its children's
             baselines. This attribute is particularly useful when the children
             use different values for gravity. The default value is true.
        -->
        <attr name="android:baselineAligned" />
        <!--
          When a linear layout is part of another layout that is baseline
          aligned, it can specify which of its children to baseline align to
          (that is, which child TextView).
        -->
        <attr name="android:baselineAlignedChildIndex" />
        <!--
             Defines the maximum weight sum. If unspecified, the sum is computed
             by adding the layout_weight of all of the children. This can be
             used for instance to give a single child 50% of the total available
             space by giving it a layout_weight of 0.5 and setting the weightSum
             to 1.0.
        -->
        <attr name="android:weightSum" />
        <!--
             When set to true, all children with a weight will be considered having
             the minimum size of the largest child. If false, all children are
             measured normally.
        -->
        <attr name="measureWithLargestChild" format="boolean" />
        <!-- Drawable to use as a vertical divider between buttons. -->
        <attr name="android:divider" />
        <!-- Setting for which dividers to show. -->
        <attr name="showDividers">
            <flag name="none" value="0" />
            <flag name="beginning" value="1" />
            <flag name="middle" value="2" />
            <flag name="end" value="4" />
        </attr>
        <!-- Size of padding on either end of a divider. -->
        <attr name="dividerPadding" format="dimension" />
    </declare-styleable>
    <declare-styleable name="ForegroundLinearLayout">
        <attr name="android:foreground" />
        <attr name="android:foregroundGravity" />
        <attr name="foregroundInsidePadding" format="boolean" />
    </declare-styleable>
    <declare-styleable name="LinearLayoutCompat_Layout">
        <attr name="android:layout_width" />
        <attr name="android:layout_height" />
        <attr name="android:layout_weight" />
        <attr name="android:layout_gravity" />
    </declare-styleable>

    <!-- Base attributes that are available to all groups. -->
    <declare-styleable name="MenuGroup">

        <!-- The ID of the group. -->
        <attr name="android:id" />

        <!--
             The category applied to all items within this group.
             (This will be or'ed with the orderInCategory attribute.)
        -->
        <attr name="android:menuCategory" />

        <!--
             The order within the category applied to all items within this group.
             (This will be or'ed with the category attribute.)
        -->
        <attr name="android:orderInCategory" />

        <!-- Whether the items are capable of displaying a check mark. -->
        <attr name="android:checkableBehavior" />

        <!-- Whether the items are shown/visible. -->
        <attr name="android:visible" />

        <!-- Whether the items are enabled. -->
        <attr name="android:enabled" />
    </declare-styleable>

    <!-- Base attributes that are available to all Item objects. -->
    <declare-styleable name="MenuItem">

        <!-- The ID of the item. -->
        <attr name="android:id" />

        <!--
             The category applied to the item.
             (This will be or'ed with the orderInCategory attribute.)
        -->
        <attr name="android:menuCategory" />

        <!--
             The order within the category applied to the item.
             (This will be or'ed with the category attribute.)
        -->
        <attr name="android:orderInCategory" />

        <!-- The title associated with the item. -->
        <attr name="android:title" />

        <!--
             The condensed title associated with the item.  This is used in situations where the
             normal title may be too long to be displayed.
        -->
        <attr name="android:titleCondensed" />

        <!--
             The icon associated with this item.  This icon will not always be shown, so
             the title should be sufficient in describing this item.
        -->
        <attr name="android:icon" />

        <!--
             The alphabetic shortcut key.  This is the shortcut when using a keyboard
             with alphabetic keys.
        -->
        <attr name="android:alphabeticShortcut" />

        <!--
             The numeric shortcut key.  This is the shortcut when using a numeric (e.g., 12-key)
             keyboard.
        -->
        <attr name="android:numericShortcut" />

        <!-- Whether the item is capable of displaying a check mark. -->
        <attr name="android:checkable" />

        <!--
             Whether the item is checked.  Note that you must first have enabled checking with
             the checkable attribute or else the check mark will not appear.
        -->
        <attr name="android:checked" />

        <!-- Whether the item is shown/visible. -->
        <attr name="android:visible" />

        <!-- Whether the item is enabled. -->
        <attr name="android:enabled" />

        <!--
             Name of a method on the Context used to inflate the menu that will be
             called when the item is clicked.
        -->
        <attr name="android:onClick" />

        <!-- How this item should display in the Action Bar, if present. -->
        <attr name="showAsAction">

            <!--
                 Never show this item in an action bar, show it in the overflow menu instead.
                 Mutually exclusive with "ifRoom" and "always".
            -->
            <flag name="never" value="0" />
            <!--
                 Show this item in an action bar if there is room for it as determined
                 by the system. Favor this option over "always" where possible.
                 Mutually exclusive with "never" and "always".
            -->
            <flag name="ifRoom" value="1" />
            <!--
                 Always show this item in an actionbar, even if it would override
                 the system's limits of how much stuff to put there. This may make
                 your action bar look bad on some screens. In most cases you should
                 use "ifRoom" instead. Mutually exclusive with "ifRoom" and "never".
            -->
            <flag name="always" value="2" />
            <!--
                 When this item is shown as an action in the action bar, show a text
                 label with it even if it has an icon representation.
            -->
            <flag name="withText" value="4" />
            <!--
                 This item's action view collapses to a normal menu
                 item. When expanded, the action view takes over a
                 larger segment of its container.
            -->
            <flag name="collapseActionView" value="8" />
        </attr>

        <!--
             An optional layout to be used as an action view.
             See {@link android.view.MenuItem#setActionView(android.view.View)}
             for more info.
        -->
        <attr name="actionLayout" format="reference" />

        <!--
             The name of an optional View class to instantiate and use as an
             action view. See {@link android.view.MenuItem#setActionView(android.view.View)}
             for more info.
        -->
        <attr name="actionViewClass" format="string" />

        <!--
             The name of an optional ActionProvider class to instantiate an action view
             and perform operations such as default action for that menu item.
             See {@link android.view.MenuItem#setActionProvider(android.view.ActionProvider)}
             for more info.
        -->
        <attr name="actionProviderClass" format="string" />
    </declare-styleable>
    <declare-styleable name="NavigationView">
        <attr name="android:background" />
        <attr name="android:fitsSystemWindows" />
        <attr name="android:maxWidth" />
        <attr name="android:maxHeight" />
        <attr name="android:elevation" />
        <!-- The menu resource to inflate and populate items from. -->
        <attr name="menu" format="reference" />
        <attr name="itemIconTint" format="color" />
        <attr name="itemTextColor" format="color" />
        <attr name="itemBackground" />
        <attr name="itemTextAppearance" />
        <!-- Layout resource to inflate as the header -->
        <attr name="headerLayout" />
    </declare-styleable>
    <declare-styleable name="CoordinatorLayout">

        <!--
             A reference to an array of integers representing the
             locations of horizontal keylines in dp from the starting edge.
             Child views can refer to these keylines for alignment using
             layout_keyline="index" where index is a 0-based index into
             this array.
        -->
        <attr name="keylines" format="reference" />
        <!-- Drawable to display behind the status bar when the view is set to draw behind it. -->
        <attr name="statusBarBackground" format="reference" />
    </declare-styleable>
    <declare-styleable name="CoordinatorLayout_LayoutParams">
        <attr name="android:layout_gravity" />
        <!--
             The class name of a Behavior class defining special runtime behavior
             for this child view.
        -->
        <attr name="layout_behavior" format="string" />
        <!-- The id of an anchor view that this view should position relative to. -->
        <attr name="layout_anchor" format="reference" />
        <!--
             The index of a keyline this view should position relative to.
             android:layout_gravity will affect how the view aligns to the
             specified keyline.
        -->
        <attr name="layout_keyline" format="integer" />

        <!--
             Specifies how an object should position relative to an anchor, on both the X and Y axes,
             within its parent's bounds.
        -->
        <attr name="layout_anchorGravity">

            <!-- Push object to the top of its container, not changing its size. -->
            <flag name="top" value="0x30" />
            <!-- Push object to the bottom of its container, not changing its size. -->
            <flag name="bottom" value="0x50" />
            <!-- Push object to the left of its container, not changing its size. -->
            <flag name="left" value="0x03" />
            <!-- Push object to the right of its container, not changing its size. -->
            <flag name="right" value="0x05" />
            <!-- Place object in the vertical center of its container, not changing its size. -->
            <flag name="center_vertical" value="0x10" />
            <!-- Grow the vertical size of the object if needed so it completely fills its container. -->
            <flag name="fill_vertical" value="0x70" />
            <!-- Place object in the horizontal center of its container, not changing its size. -->
            <flag name="center_horizontal" value="0x01" />
            <!-- Grow the horizontal size of the object if needed so it completely fills its container. -->
            <flag name="fill_horizontal" value="0x07" />
            <!-- Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. -->
            <flag name="center" value="0x11" />
            <!-- Grow the horizontal and vertical size of the object if needed so it completely fills its container. -->
            <flag name="fill" value="0x77" />
            <!--
                 Additional option that can be set to have the top and/or bottom edges of
                 the child clipped to its container's bounds.
                 The clip will be based on the vertical gravity: a top gravity will clip the bottom
                 edge, a bottom gravity will clip the top edge, and neither will clip both edges.
            -->
            <flag name="clip_vertical" value="0x80" />
            <!--
                 Additional option that can be set to have the left and/or right edges of
                 the child clipped to its container's bounds.
                 The clip will be based on the horizontal gravity: a left gravity will clip the right
                 edge, a right gravity will clip the left edge, and neither will clip both edges.
            -->
            <flag name="clip_horizontal" value="0x08" />
            <!-- Push object to the beginning of its container, not changing its size. -->
            <flag name="start" value="0x00800003" />
            <!-- Push object to the end of its container, not changing its size. -->
            <flag name="end" value="0x00800005" />
        </attr>
    </declare-styleable>
    <declare-styleable name="TextInputLayout">
        <attr name="hintTextAppearance" format="reference" />
        <!-- The hint to display in the floating label -->
        <attr name="android:hint" />
        <!-- Whether the layout's floating label functionality is enabled -->
        <attr name="hintEnabled" format="boolean" />
        <!-- Whether the layout is laid out as if an error will be displayed -->
        <attr name="errorEnabled" format="boolean" />
        <!-- TextAppearance of any error message displayed -->
        <attr name="errorTextAppearance" format="reference" />
        <!-- Whether the layout is laid out as if the character counter will be displayed -->
        <attr name="counterEnabled" format="boolean" />
        <!-- The max length to display in the character counter -->
        <attr name="counterMaxLength" format="integer" />
        <!-- TextAppearance of the character counter -->
        <attr name="counterTextAppearance" format="reference" />
        <!-- TextAppearance of the character counter when the text is longer than the max -->
        <attr name="counterOverflowTextAppearance" format="reference" />
        <attr name="android:textColorHint" />
        <!-- Whether to animate hint state changes. -->
        <attr name="hintAnimationEnabled" format="boolean" />
    </declare-styleable>
    <declare-styleable name="SnackbarLayout">
        <attr name="android:maxWidth" />
        <attr name="android:elevation" />
        <attr name="maxActionInlineWidth" format="dimension" />
    </declare-styleable>
    <declare-styleable name="TextHelperTextAppearance">

        <!-- Text color. -->
        <attr name="android:textColor" />
        <!-- Size of the text. Recommended dimension type for text is "sp" for scaled-pixels (example: 15sp). -->
        <attr name="android:textSize" />
        <!--
             Place a blurred shadow of text underneath the text, drawn with the
             specified color. The text shadow produced does not interact with
             properties on View that are responsible for real time shadows,
             {@link android.R.styleable#View_elevation elevation} and
             {@link android.R.styleable#View_translationZ translationZ}.
        -->
        <attr name="android:shadowColor" />
        <!-- Horizontal offset of the text shadow. -->
        <attr name="android:shadowDx" />
        <!-- Vertical offset of the text shadow. -->
        <attr name="android:shadowDy" />
        <!-- Blur radius of the text shadow. -->
        <attr name="android:shadowRadius" />
    </declare-styleable>
    <declare-styleable name="CollapsingToolbarLayout">

        <!--
              Specifies extra space on the start, top, end and bottom
              sides of the the expanded title text. Margin values should be positive.
        -->
        <attr name="expandedTitleMargin" format="dimension" />
        <!--
              Specifies extra space on the start side of the the expanded title text.
              Margin values should be positive.
        -->
        <attr name="expandedTitleMarginStart" format="dimension" />
        <!--
              Specifies extra space on the top side of the the expanded title text.
              Margin values should be positive.
        -->
        <attr name="expandedTitleMarginTop" format="dimension" />
        <!--
              Specifies extra space on the end side of the the expanded title text.
              Margin values should be positive.
        -->
        <attr name="expandedTitleMarginEnd" format="dimension" />
        <!--
              Specifies extra space on the bottom side of the the expanded title text.
              Margin values should be positive.
        -->
        <attr name="expandedTitleMarginBottom" format="dimension" />
        <!--
             The text appearance of the CollapsingToolbarLayout's title when it is fully
             'expanded'
        -->
        <attr name="expandedTitleTextAppearance" format="reference" />
        <!--
             The text appearance of the CollapsingToolbarLayouts title when it is fully
             'collapsed'
        -->
        <attr name="collapsedTitleTextAppearance" format="reference" />
        <!--
             The drawable to use as a scrim on top of the CollapsingToolbarLayouts content when
             it has been scrolled sufficiently off screen.
        -->
        <attr name="contentScrim" format="color" />
        <!--
             The drawable to use as a scrim for the status bar content when the
             CollapsingToolbarLayout has been scrolled sufficiently off screen. Only works on
             Lollipop with the correct setup.
        -->
        <attr name="statusBarScrim" format="color" />
        <!--
             The id of the primary Toolbar child that you wish to use for the purpose of collapsing.
             If you do not set this then the first Toolbar child found will be used.
        -->
        <attr name="toolbarId" format="reference" />

        <!-- Specifies how the title should be positioned when collapsed. -->
        <attr name="collapsedTitleGravity">

            <!-- Push title to the top of its container, not changing its size. -->
            <flag name="top" value="0x30" />
            <!-- Push title to the bottom of its container, not changing its size. -->
            <flag name="bottom" value="0x50" />
            <!-- Push title to the left of its container, not changing its size. -->
            <flag name="left" value="0x03" />
            <!-- Push title to the right of its container, not changing its size. -->
            <flag name="right" value="0x05" />
            <!-- Place title in the vertical center of its container, not changing its size. -->
            <flag name="center_vertical" value="0x10" />
            <!-- Grow the vertical size of the title if needed so it completely fills its container. -->
            <flag name="fill_vertical" value="0x70" />
            <!-- Place title in the horizontal center of its container, not changing its size. -->
            <flag name="center_horizontal" value="0x01" />
            <!-- Place the title in the center of its container in both the vertical and horizontal axis, not changing its size. -->
            <flag name="center" value="0x11" />
            <!-- Push title to the beginning of its container, not changing its size. -->
            <flag name="start" value="0x00800003" />
            <!-- Push title to the end of its container, not changing its size. -->
            <flag name="end" value="0x00800005" />
        </attr>

        <!-- Specifies how the title should be positioned when expanded. -->
        <attr name="expandedTitleGravity">

            <!-- Push title to the top of its container, not changing its size. -->
            <flag name="top" value="0x30" />
            <!-- Push title to the bottom of its container, not changing its size. -->
            <flag name="bottom" value="0x50" />
            <!-- Push title to the left of its container, not changing its size. -->
            <flag name="left" value="0x03" />
            <!-- Push title to the right of its container, not changing its size. -->
            <flag name="right" value="0x05" />
            <!-- Place title in the vertical center of its container, not changing its size. -->
            <flag name="center_vertical" value="0x10" />
            <!-- Grow the vertical size of the title if needed so it completely fills its container. -->
            <flag name="fill_vertical" value="0x70" />
            <!-- Place title in the horizontal center of its container, not changing its size. -->
            <flag name="center_horizontal" value="0x01" />
            <!-- Place the title in the center of its container in both the vertical and horizontal axis, not changing its size. -->
            <flag name="center" value="0x11" />
            <!-- Push title to the beginning of its container, not changing its size. -->
            <flag name="start" value="0x00800003" />
            <!-- Push title to the end of its container, not changing its size. -->
            <flag name="end" value="0x00800005" />
        </attr>

        <!-- Whether the CollapsingToolbarLayout should draw its own shrinking/growing title. -->
        <attr name="titleEnabled" format="boolean" />
        <!-- The title to show when titleEnabled is set to true. -->
        <attr name="title" />
    </declare-styleable>
    <declare-styleable name="AppBarLayout">
        <attr name="android:elevation" />
        <attr name="android:background" />
        <!--
             The initial expanded state for the AppBarLayout. This only takes effect when this
             view is a direct child of a CoordinatorLayout.
        -->
        <attr name="expanded" format="boolean" />
    </declare-styleable>
    <declare-styleable name="AppBarLayout_LayoutParams">
        <attr name="layout_scrollFlags">

            <!--
                 The view will be scroll in direct relation to scroll events. This flag needs to be
                 set for any of the other flags to take effect. If any sibling views
                 before this one do not have this flag, then this value has no effect.
            -->
            <flag name="scroll" value="0x1" />

            <!--
                 When exiting (scrolling off screen) the view will be scrolled until it is
                 'collapsed'. The collapsed height is defined by the view's minimum height.
            -->
            <flag name="exitUntilCollapsed" value="0x2" />

            <!--
                 When entering (scrolling on screen) the view will scroll on any downwards
                 scroll event, regardless of whether the scrolling view is also scrolling. This
                 is commonly referred to as the 'quick return' pattern.
            -->
            <flag name="enterAlways" value="0x4" />

            <!--
                 An additional flag for 'enterAlways' which modifies the returning view to
                 only initially scroll back to it's collapsed height. Once the scrolling view has
                 reached the end of it's scroll range, the remainder of this view will be scrolled
                 into view.
            -->
            <flag name="enterAlwaysCollapsed" value="0x8" />

            <!--
                 Upon a scroll ending, if the view is only partially visible then it will be
                 snapped and scrolled to it's closest edge.
            -->
            <flag name="snap" value="0x10" />
        </attr>

        <!--
             An interpolator to use when scrolling this View. Only takes effect when View
             is scrollable.
        -->
        <attr name="layout_scrollInterpolator" format="reference" />
    </declare-styleable>
    <declare-styleable name="ScrollingViewBehavior_Params">

        <!-- The amount that the scrolling view should overlap the bottom of any AppBarLayout -->
        <attr name="behavior_overlapTop" format="dimension" />
    </declare-styleable>
    <declare-styleable name="CollapsingAppBarLayout_LayoutParams">
        <attr name="layout_collapseMode">

            <!-- The view will act as normal with no collapsing behavior. -->
            <enum name="none" value="0" />
            <!-- The view will pin in place. -->
            <enum name="pin" value="1" />
            <!--
                 The view will scroll in a parallax fashion. See the
                 layout_collapseParallaxMultiplier attribute to change the multiplier.
            -->
            <enum name="parallax" value="2" />
        </attr>

        <!--
             The multiplier used when layout_collapseMode is set to 'parallax'. The value should
             be between 0.0 and 1.0.
        -->
        <attr name="layout_collapseParallaxMultiplier" format="float" />
    </declare-styleable>

    <attr name="windowLayoutStyle" format="reference" />

    <declare-styleable name="WindowStyle">
        <attr name="windowHasToolbar" format="boolean" />
        <attr name="windowLayout" format="reference" />
        <attr name="hasBackIcon" format="boolean" />
        <attr name="toolbarOverlay" format="boolean" />
    </declare-styleable>

    <attr name="navigationStyle" format="reference" />

    <declare-styleable name="SliderLayout">
        <attr name="dragEdge">
            <flag name="left" value="1" />
            <flag name="right" value="2" />
            <flag name="top" value="4" />
            <flag name="bottom" value="8" />
            <flag name="left_and_right" value="16" />
        </attr>
        <attr name="dragMode">
            <enum name="normal" value="0" />
            <enum name="same_layer" value="1" />
        </attr>
        <attr name="flingVelocity" format="integer" />
        <attr name="handleEventInParent" format="boolean" />
    </declare-styleable>
    <!-- Style attr for ActionMode -->
    <attr name="actionModeStyle" format="reference" />
    <declare-styleable name="ActionMode">
        <attr name="title" />
        <attr name="actionTextAppearance" format="reference" />
        <attr name="actionTitleAppearance" format="reference" />
        <attr name="actionPositiveText" format="string" />
        <attr name="actionNagativeText" format="string" />
        <attr name="android:background"/>
        <attr name="android:height"/>
    </declare-styleable>

    <attr name="dropdownListPreferredItemHeight" format="dimension" />
    <attr name="searchResultListItemHeight" format="dimension" />
    <attr name="floatingActionButtonHint" format="color" />
    <attr name="numberPickerStyle" format="reference" />
    <attr name="internalLayout" format="reference" />

    <declare-styleable name="NumberPicker">

        <!-- @hide Color for the solid color background if such for optimized rendering. -->
        <attr name="solidColor" format="color|reference" />
        <!-- @hide The divider for making the selection area. -->
        <attr name="selectionDivider" format="reference" />
        <!-- @hide The height of the selection divider. -->
        <attr name="selectionDividerHeight" format="dimension" />
        <!-- @hide The distance between the two selection dividers. -->
        <attr name="selectionDividersDistance" format="dimension" />
        <!-- @hide The min height of the NumberPicker. -->
        <attr name="internalMinHeight" format="dimension" />
        <!-- @hide The max height of the NumberPicker. -->
        <attr name="internalMaxHeight" format="dimension" />
        <!-- @hide The min width of the NumberPicker. -->
        <attr name="internalMinWidth" format="dimension" />
        <!-- @hide The max width of the NumberPicker. -->
        <attr name="internalMaxWidth" format="dimension" />
        <!-- @hide The layout of the number picker. -->
        <attr name="internalLayout" />
        <!-- @hide The drawable for pressed virtual (increment/decrement) buttons. -->
        <attr name="virtualButtonPressedDrawable" format="reference" />
        <!-- @hide If true then the selector wheel is hidden until the picker has focus. -->
        <attr name="hideWheelUntilFocused" format="boolean" />
        
        <attr name="drawSelectionDivider" format="boolean" />
        <attr name="selectionLabel" format="string" />
        <attr name="normalTextSize" format="dimension" />
        <attr name="selectionTextSize" format="dimension" />
        <attr name="selectionTextColor" format="color|reference" />
        <attr name="selectionLabelTextSize" format="dimension" />
        <attr name="selectionLabelTextColor" format="color|reference" />
        <attr name="secondTextSize" format="dimension" />
        <attr name="secondTextColor" format="color|reference" />
        <attr name="labelFontFamily" format="string" />
        <attr name="labelspace" format="dimension" />
        <attr name="autoWidth" format="boolean" />
        <attr name="labelTextStyle">
            <flag name="normal" value="0" />
            <flag name="bold" value="1" />
            <flag name="italic" value="2" />
        </attr>
        <attr name="android:fontFamily"/>
        <attr name="android:textStyle"/>
    </declare-styleable>

    <!-- The TimePicker style. -->
    <attr name="timePickerStyle" format="reference" />

    <!-- The TimePicker dialog theme. -->
    <attr name="timePickerDialogTheme" format="reference" />

    <!-- The DatePicker style. -->
    <attr name="datePickerStyle" format="reference" />
    <attr name="dateTimePickerStyle" format="reference" />

    <!-- The DatePicker dialog theme. -->
    <attr name="datePickerDialogTheme" format="reference" />

    <declare-styleable name="DatePicker">

        <!-- The first day of week according to {@link java.util.Calendar}. -->
        <attr name="android:firstDayOfWeek" />
        <!-- The minimal date shown by this calendar view in mm/dd/yyyy format. -->
        <attr name="minDate" format="string" />
        <!-- The maximal date shown by this calendar view in mm/dd/yyyy format. -->
        <attr name="maxDate" format="string" />

        <!-- Whether the spinners are shown. Only valid for "spinner" mode. -->
        <attr name="spinnersShown" format="boolean" />
        <!-- Whether the calendar view is shown. Only valid for "spinner" mode. -->
        <attr name="calendarViewShown" format="boolean" />

        <!-- @hide The layout of the date picker. -->
        <attr name="internalLayout" />
        <!-- @hide The layout of the legacy DatePicker. -->
        <attr name="legacyLayout" />

        <!--
             The text color for the selected date header text, ex. "2014" or
             "Tue, Mar 18". This should be a color state list where the
             activated state will be used when the year picker or day picker is
             active.
        -->
        <attr name="headerTextColor" format="color" />
        <!-- The background for the selected date header. -->
        <attr name="headerBackground" />

        <!--
             The list year's text appearance in the list.
             {@deprecated Use yearListTextColor. }
        -->
        <attr name="yearListItemTextAppearance" format="reference" />
        <!-- @hide The list year's text appearance in the list when activated. -->
        <attr name="yearListItemActivatedTextAppearance" format="reference" />
        <!-- The text color list of the calendar. -->
        <attr name="calendarTextColor" format="color" />

        <!--
             Defines the look of the widget. Prior to the L release, the only choice was
             spinner. As of L, with the Material theme selected, the default layout is calendar,
             but this attribute can be used to force spinner to be used instead.
        -->
        <attr name="datePickerMode">

            <!-- Date picker with spinner controls to select the date. -->
            <enum name="spinner" value="1" />
            <!-- Date picker with calendar to select the date. -->
            <enum name="calendar" value="2" />
        </attr>

        <!--
             The first year (inclusive), for example "1940".
             {@deprecated Use minDate instead.}
        -->
        <attr name="startYear" format="integer" />
        <!--
             The last year (inclusive), for example "2010".
             {@deprecated Use maxDate instead.}
        -->
        <attr name="endYear" format="integer" />
        <!--
             The text appearance for the month (ex. May) in the selected date header.
             {@deprecated Use headerTextColor instead.}
        -->
        <attr name="headerMonthTextAppearance" format="reference" />
        <!--
             The text appearance for the day of month (ex. 28) in the selected date header.
             {@deprecated Use headerTextColor instead.}
        -->
        <attr name="headerDayOfMonthTextAppearance" format="reference" />
        <!--
             The text appearance for the year (ex. 2014) in the selected date header.
             {@deprecated Use headerTextColor instead.}
        -->
        <attr name="headerYearTextAppearance" format="reference" />
        <!--
             The background color for the header's day of week.
             {@deprecated No longer displayed.}
        -->
        <attr name="dayOfWeekBackground" format="color" />
        <!--
             The text color for the header's day of week.
             {@deprecated No longer displayed.}
        -->
        <attr name="dayOfWeekTextAppearance" format="reference" />
        <!--
             The list year's selected circle color in the list.
             {@deprecated No longer displayed.}
        -->
        <attr name="yearListSelectorColor" format="color" />
        <attr name="middleMargin" format="dimension" />

        <attr name="normalTextSize"/>
        <attr name="selectionTextSize"/>
        <attr name="selectionTextColor"/>
        <attr name="selectionLabelTextSize"/>
        <attr name="selectionLabelTextColor"/>
        <attr name="secondTextSize"/>
        <attr name="secondTextColor"/>
        <attr name="labelFontFamily"/>
        <attr name="labelspace1" format="dimension" />
        <attr name="labelspace2" format="dimension" />
        <attr name="labelspace3" format="dimension" />
        <attr name="labelTextStyle"/>
        <attr name="android:fontFamily"/>
        <attr name="android:textStyle"/>
    </declare-styleable>
    <declare-styleable name="DateTimePicker">
        <attr name="android:firstDayOfWeek" />
        <attr name="minDate"/>
        <attr name="maxDate"/>
        <attr name="spinnersShown"/>
        <attr name="calendarViewShown"/>
        <attr name="internalLayout" />
        <attr name="legacyLayout" />
        <attr name="headerTextColor"/>
        <attr name="headerBackground" />
        <attr name="yearListItemTextAppearance"/>
        <attr name="yearListItemActivatedTextAppearance"/>
        <attr name="calendarTextColor"/>
        <attr name="datePickerMode"/>
        <attr name="startYear"/>
        <attr name="endYear"/>
        <attr name="headerMonthTextAppearance"/>
        <attr name="headerDayOfMonthTextAppearance"/>
        <attr name="headerYearTextAppearance"/>
        <attr name="dayOfWeekBackground"/>
        <attr name="dayOfWeekTextAppearance"/>
        <attr name="yearListSelectorColor" />
        <attr name="middleMargin"/>

        <attr name="normalTextSize"/>
        <attr name="selectionTextSize"/>
        <attr name="selectionTextColor"/>
        <attr name="selectionLabelTextSize"/>
        <attr name="selectionLabelTextColor"/>
        <attr name="secondTextSize"/>
        <attr name="secondTextColor"/>
        <attr name="labelFontFamily"/>
        <attr name="labelspace1"/>
        <attr name="labelspace2"/>
        <attr name="labelspace3"/>
        <attr name="labelTextStyle"/>
        <attr name="android:fontFamily"/>
        <attr name="android:textStyle"/>
    </declare-styleable>
    <declare-styleable name="TimePicker">

        <!-- @hide The layout of the legacy time picker. -->
        <attr name="legacyLayout" format="reference" />
        <!-- @hide The layout of the time picker. -->
        <attr name="internalLayout" />

        <!--
             The text color for the selected time header text, ex. "12" or
             "PM". This should be a color state list where the activated state
             will be used when the minute picker or hour picker is active.
        -->
        <attr name="headerTextColor" />
        <!-- The background for the header containing the currently selected time. -->
        <attr name="headerBackground" />

        <!--
             The color for the hours/minutes numbers. This should be a color
             state list where the activated state will be used when the number
             is active.
        -->
        <attr name="numbersTextColor" format="color" />
        <!--
             The color for the inner hours numbers used in 24-hour mode. This
             should be a color state list where the activated state will be
             used when the number is active.
        -->
        <attr name="numbersInnerTextColor" format="color" />
        <!-- The background color for the hours/minutes numbers. -->
        <attr name="numbersBackgroundColor" format="color" />
        <!-- The color for the hours/minutes selector. -->
        <attr name="numbersSelectorColor" format="color" />

        <!--
             Defines the look of the widget. Prior to the L release, the only choice was
             spinner. As of L, with the Material theme selected, the default layout is clock,
             but this attribute can be used to force spinner to be used instead.
        -->
        <attr name="timePickerMode">

            <!-- Time picker with spinner controls to select the time. -->
            <enum name="spinner" value="1" />
            <!-- Time picker with clock face to select the time. -->
            <enum name="clock" value="2" />
        </attr>

        <!--
             The text appearance for the AM/PM header.
             @deprecated Use headerTextColor instead.
        -->
        <attr name="headerAmPmTextAppearance" format="reference" />
        <!--
             The text appearance for the time header.
             @deprecated Use headerTextColor instead.
        -->
        <attr name="headerTimeTextAppearance" format="reference" />
        <!--
             The color for the AM/PM selectors.
             {@deprecated Use headerTextColor instead.}
        -->
        <attr name="amPmTextColor" format="color" />
        <!--
             The background color state list for the AM/PM selectors.
             {@deprecated Use headerBackground instead.}
        -->
        <attr name="amPmBackgroundColor" format="color" />

        <attr name="normalTextSize"/>
        <attr name="selectionTextSize"/>
        <attr name="selectionTextColor"/>
        <attr name="selectionLabelTextSize"/>
        <attr name="selectionLabelTextColor"/>
        <attr name="secondTextSize"/>
        <attr name="secondTextColor"/>
        <attr name="labelFontFamily"/>
        <attr name="labelspace1"/>
        <attr name="labelspace2"/>
        <attr name="labelspace3"/>
        <attr name="labelTextStyle"/>
        <attr name="android:fontFamily"/>
        <attr name="android:textStyle"/>
    </declare-styleable>
    <!-- DrawerActivity Layout -->
    <declare-styleable name="DrawerActivityLayout">
        <attr name="android:maxWidth" />
        <attr name="maxCollapsedHeight" format="dimension" />
        <attr name="maxCollapsedHeightSmall" format="dimension" />
    </declare-styleable>
    <declare-styleable name="DrawerActivityLayout_LayoutParams">
        <attr name="layout_alwaysShow" format="boolean" />
        <attr name="layout_ignoreOffset" format="boolean" />
        <attr name="android:layout_gravity" />
    </declare-styleable>
	
	<declare-styleable name="MstIndexBar">
        <attr name="shareBackground" format="reference|color"/>
        <attr name="letterColor" format="color"/>
        <attr name="letterTextSize" format="dimension"/>
        <attr name="subTextSize" format="dimension"/>
        <attr name="letterSpace" format="dimension"/>
        <attr name="fontWeight" format="float"/>
        <attr name="balloonLeft" format="dimension"/>
        <attr name="balloonTop" format="dimension"/>
        <attr name="subGap" format="dimension"/>
        <attr name="balloonGap" format="dimension"/>
        <attr name="balloonLayerColor" format="reference"/>
        <attr name="balloonFocusColor" format="reference"/>
        <attr name="balloonGravity">
            <flag name="top" value="0x30" />
            <flag name="bottom" value="0x50" />
            <flag name="left" value="0x03" />
            <flag name="right" value="0x05" />
            <flag name="center_vertical" value="0x10" />
            <flag name="fill_vertical" value="0x70" />
            <flag name="center_horizontal" value="0x01" />
            <flag name="fill_horizontal" value="0x07" />
            <flag name="center" value="0x11" />
            <flag name="fill" value="0x77" />
            <flag name="clip_vertical" value="0x80" />
            <flag name="clip_horizontal" value="0x08" />
            <flag name="start" value="0x00800003" />
            <flag name="end" value="0x00800005" />
        </attr>
	    <attr name="balloonDiameter" format="dimension"/>
        <attr name="balloonDispersion" format="float"/>
        <attr name="android:fontFamily"/>
        <attr name="android:textStyle"/>
    </declare-styleable>
    
	<declare-styleable name="MaxHeightView">
        <attr name="heightRatio" format="reference|float" />
        <attr name="android:maxHeight"  />
    </declare-styleable>
    <declare-styleable name="SliderView">
        <attr name="layout"/>
    </declare-styleable>
    
     <!-- interpolator for  cubic-bezier-->
   <declare-styleable name="BezierInterpolator">
        <attr name="bezierPoint"  format="string" />
    </declare-styleable>

</resources>
