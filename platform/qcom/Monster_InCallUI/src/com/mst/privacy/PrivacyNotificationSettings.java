/**
  * Generated by smali2java 1.0.0.558
  * Copyright (C) 2013 Hensence.com
  */

package com.mst.privacy;

import mst.preference.PreferenceActivity;
import mst.preference.Preference;
import android.net.Uri;
import android.util.Log;
import android.content.ContentResolver;
import android.provider.ContactsContract;
import android.database.Cursor;
import android.os.Bundle;
import android.content.Intent;
import android.os.Parcelable;

import mst.preference.PreferenceScreen;
import android.content.ContentValues;

import com.android.incallui.InCallApp;
import com.android.incallui.R;
import com.mst.utils.DatabaseUtil;

public class PrivacyNotificationSettings extends PreferenceActivity implements Preference.OnPreferenceChangeListener {
    private static final boolean DBG = true;
    static final String TAG = "PrivacyNotificationSettings";
    private Uri mContactUri;
    private PrivacyRadioPreference[] mRadio;
    private long mRawContactId;
    private Preference[] noti;
    
    
    protected void onCreate(Bundle icicle) {
        super.onCreate(icicle);
        addPreferencesFromResource(R.xml.private_noti_settings);
        Intent intent = getIntent();
        String contactName = intent.getStringExtra("name");
        mContactUri = (Uri)intent.getParcelableExtra("contactUri");
        mRawContactId = DatabaseUtil.queryForRawContactId(getContentResolver(), Long.parseLong(mContactUri.getLastPathSegment()));
        PreferenceScreen prefSet = getPreferenceScreen();
        prefSet.setTitle(contactName);
        noti = new Preference[6];
        for(int i = 0; i < 6; i++) {
        	noti[i] = prefSet.findPreference("private_radio_text_" + (i+1));
        	noti[i].setEnabled(false);
        	prefSet.removePreference(noti[i]);
        }
        mRadio = new PrivacyRadioPreference[0x2];
        mRadio[0] = (PrivacyRadioPreference)prefSet.findPreference("private_radio_2");
        mRadio[1] = (PrivacyRadioPreference)prefSet.findPreference("private_radio_1");
        mRadio[0].setOnPreferenceChangeListener(this);
        mRadio[1].setOnPreferenceChangeListener(this);
        int choice = getChoice();
        mRadio[choice].setChecked();
        int base = choice == 0 ? 0 : 3;        
        for(int i = 0; i < 3; i++) {
            prefSet.addPreference(noti[i+base]);
        }
        
        InCallApp.mPrivacyActivityList.add(this);
        
    }
    
    private int getChoice() {
        int result = 0x0;
        Log.i("PrivacyNotificationSettings", "getChoice rawContactId = " + mRawContactId);
        Cursor c = getContentResolver().query(ContactsContract.RawContacts.CONTENT_URI, new String[] {"call_notification_type"}, "_id=" + mRawContactId + " and is_privacy > -1", null, null);
        if((c != null) && (c.getCount() > 0)) {
            c.moveToFirst();
            result = c.getInt(0);
        }
        if(c != null) {
            c.close();
        }
        Log.i("PrivacyNotificationSettings", "getChoice result = " + result);
        return result;
    }
    
    protected void onResume() {
        super.onResume();
    }
    
    public boolean onPreferenceChange(Preference preference, Object objValue) {
        Log.d(TAG, "onPreferenceChange()");
        PreferenceScreen prefSet = getPreferenceScreen();
        for(int i = 0; i < 2; i++) {
            if(PrivacyRadioPreference.getSelectedKey().equalsIgnoreCase(mRadio[i].getKey())) {
                ContentValues values = new ContentValues();
                values.put("call_notification_type", Integer.valueOf(i));
                getContentResolver().update(ContactsContract.RawContacts.CONTENT_URI, values, "_id=" + mRawContactId + " and is_privacy > -1", null); 
                if(i == 0) {
	                for(int j = 0; j < 3; j++) {
	                    prefSet.addPreference(noti[j]);
	                    prefSet.removePreference(noti[j+3]);
	                }
                } else {
                    for(int j = 0; j < 3; j++) {
	                    prefSet.addPreference(noti[j+3]);
	                    prefSet.removePreference(noti[j]);
	                }
                }
            }
        }
        return true;
    }
    
    private static void log(String msg) {
        Log.d(TAG, msg);
    }
    
    protected void onDestroy() {
        super.onDestroy();
        InCallApp.mPrivacyActivityList.remove(this);        
    }
}
