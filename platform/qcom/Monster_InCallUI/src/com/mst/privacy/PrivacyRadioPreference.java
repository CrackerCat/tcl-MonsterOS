/**
  * Generated by smali2java 1.0.0.558
  * Copyright (C) 2013 Hensence.com
  */

package com.mst.privacy;

import mst.preference.Preference;
import com.android.incallui.R;
import android.widget.CompoundButton;
import android.view.View;
import android.widget.RadioButton;
import android.content.Context;
import android.util.AttributeSet;
import android.view.ViewGroup;
import android.util.Log;
import android.widget.LinearLayout;

public class PrivacyRadioPreference extends Preference implements CompoundButton.OnCheckedChangeListener, View.OnClickListener {
    static final String TAG = "PrivacyRadioPreference";
    RadioButton rb;
    
    public PrivacyRadioPreference(Context context, AttributeSet attrs, int defStyle) {
        super(context, attrs, defStyle);
        init();
    }
    
    public PrivacyRadioPreference(Context context, AttributeSet attrs) {
        super(context, attrs);
        init();
    }
    
    public PrivacyRadioPreference(Context context) {
        super(context);
        init();
    }
    private static String mSelectedKey = "";
    private static CompoundButton mCurrentChecked = null;
    private boolean mProtectFromCheckedChange = false;
    
    public static String getSelectedKey() {
        return mSelectedKey;
    }
    
    public View getView(View convertView, ViewGroup parent) {
        View view = super.getView(convertView, parent);
        View widget = view.findViewById(R.id.pre_net_radiobutton);
        if((widget != null) && (widget instanceof RadioButton)) {
            Log.i("PrivacyRadioPreference", "ID: getview");
            rb = (RadioButton)widget;
            rb.setOnCheckedChangeListener(this);
            rb.setFocusable(false);
            boolean isChecked = getKey().equals(mSelectedKey);
            if(isChecked) {
                mCurrentChecked = rb;
                mSelectedKey = getKey();
            }
            mProtectFromCheckedChange = true;
            rb.setChecked(isChecked);
            mProtectFromCheckedChange = false;
        }
        View textLayout = view.findViewById(R.id.main);
        if ((textLayout != null) && textLayout instanceof LinearLayout) {
            textLayout.setOnClickListener(this);
        }
        return view;
    }
    
    private void init() {
        setLayoutResource(R.layout.private_radio_preference);
    }
    
    public boolean isChecked() {
        return getKey().equals(mSelectedKey);
    }
    
    public void setChecked() {
        Log.i("PrivacyRadioPreference", "setChecked");
        mSelectedKey = getKey();
        if(rb != null) {
            rb.setChecked(true);
        }
    }
    
    public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
        Log.i("PrivacyRadioPreference", "ID: " + getKey() + " :" + isChecked);
        if(mProtectFromCheckedChange) {
            return;
        }
        if(isChecked) {
            if(mCurrentChecked != null) {
                mCurrentChecked.setChecked(false);
            }
            mCurrentChecked = buttonView;
            mSelectedKey = getKey();
            callChangeListener(mSelectedKey);
            return;
        }
        mCurrentChecked = null;
        mSelectedKey = "";
    }
    
    public void onClick(View v) {
        Log.i("PrivacyRadioPreference", " onClick ");
        if((v != null) && (R.id.main == v.getId())) {
            if(mCurrentChecked != rb) {
                rb.setChecked(true);
            }
        }
    }
}
